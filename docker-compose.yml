# docker compose --env-file dev.env config
# docker compose up -d
# docker compose --env-file dev.env up -d
# docker compose --env-file dev.env up -d --build

name: fastapi-rabbitmq-demo-project

services:
  rabbitmq:
    image: rabbitmq:3.13-management
    container_name: rabbit-fastapi
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - "5672:5672"   # AMQP Post (Advanced Message Queuing Protocol)
      - "15672:15672" # Management UI HTTP (RabbitMQ Management Web Interface)
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    #  - ./queue_init.sh:/queue_init.sh
    networks:
      - service-network
    # command: ["sh", "/queue_init.sh"]

  fastapi:
    build: .
    container_name: fastapi-demo
    environment:
      RABBITMQ_HOST: ${RABBITMQ_HOST}
      RABBITMQ_USER: ${RABBITMQ_USER}
      RABBITMQ_PASS: ${RABBITMQ_PASS}
      RABBITMQ_VHOST: ${RABBITMQ_VHOST}
      RABBITMQ_API_PORT: ${RABBITMQ_API_PORT}
    ports:
      - "8000:8000"
    depends_on:
      - rabbitmq
    networks:
      - service-network

volumes:
  rabbitmq_data:

networks:
  service-network:
    name: fastapi_rabbit_network   # nome visibile con `docker network ls`
    driver: bridge